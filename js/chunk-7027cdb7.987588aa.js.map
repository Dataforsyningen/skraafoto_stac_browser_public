{"version":3,"sources":["webpack:///./src/components/FullscreenButton.vue","webpack:///src/components/FullscreenButton.vue","webpack:///./src/components/FullscreenButton.vue?ae13","webpack:///./src/components/FullscreenButton.vue?afe3","webpack:///./src/components/FullscreenButton.vue?01e7"],"names":["render","_vm","this","_c","_self","directives","name","rawName","value","element","expression","staticClass","attrs","title","on","toggleFullscreen","isFullscreen","staticRenderFns","props","required","zIndex","type","Number","default","components","BIconFullscreen","BIconFullscreenExit","data","keyDownFn","oldZIndex","computed","mounted","onkeyDown","bind","el","getElement","style","position","addEventListener","beforeDestroy","removeEventListener","methods","e","key","preventDefault","stopPropagation","document","querySelector","body","overflow","classList","remove","add","$emit","component"],"mappings":"gJAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,WAAW,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOP,EAAIQ,QAASC,WAAW,YAAYC,YAAY,oBAAoBC,MAAM,CAAC,QAAU,QAAQ,KAAO,SAAS,MAAQX,EAAIY,OAAOC,GAAG,CAAC,MAAQb,EAAIc,mBAAmB,CAACZ,EAAG,OAAO,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOP,EAAIe,aAAcN,WAAW,kBAAkB,CAACP,EAAG,2BAA2B,GAAGA,EAAG,OAAO,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,OAAQP,EAAIe,aAAcN,WAAW,mBAAmB,CAACP,EAAG,sBAAsB,MAEvjBc,EAAkB,G,YCWP,GACfX,KAAA,mBACAY,MAAA,CACAT,QAAA,CACAU,UAAA,GAEAC,OAAA,CACAC,KAAAC,OACAC,QAAA,MAGAC,WAAA,CACAC,uBACAC,4BAEAC,OACA,OACAX,cAAA,EACAY,UAAA,KACAC,UAAA,SAGAC,SAAA,CACAjB,QACA,YAAAG,aAAA,uCAGAe,UACA,KAAAH,UAAA,KAAAI,UAAAC,KAAA,MACA,IAAAC,EAAA,KAAAC,aACAD,IACAA,EAAAE,MAAAC,SAAA,WACAH,EAAAI,iBAAA,eAAAV,aAGAW,gBACA,IAAAL,EAAA,KAAAC,aACAD,GACAA,EAAAM,oBAAA,eAAAZ,YAGAa,QAAA,CACAT,UAAAU,IAEA,KAAA1B,cAAA,QAAA0B,EAAAC,KAAA,WAAAD,EAAAC,MACA,KAAA5B,mBACA2B,EAAAE,iBACAF,EAAAG,oBAGAV,aACA,6BAAA1B,QACAqC,SAAAC,cAAA,KAAAtC,SAEA,yBAAAA,QACA,KAAAA,UAGA,KAAAA,SAGAM,mBACA,IAAAmB,EAAA,KAAAC,aACA,KAAAnB,cAQA,KAAAA,cAAA,EACA8B,SAAAE,KAAAZ,MAAAa,SAAA,KACAf,EAAAgB,UAAAC,OAAA,cAEAjB,EAAAE,MAAAhB,OAAA,KAAAS,YAXAiB,SAAAE,KAAAZ,MAAAa,SAAA,SACA,KAAAjC,cAAA,EACAkB,EAAAgB,UAAAE,IAAA,cACA,KAAAvB,UAAAK,EAAAE,MAAAhB,OACAc,EAAAE,MAAAhB,OAAA,KAAAA,QAUA,KAAAiC,MAAA,eAAArC,iBC3F0V,I,wBCQtVsC,EAAY,eACd,EACAtD,EACAiB,GACA,EACA,KACA,KACA,MAIa,aAAAqC,E,6CCnBf","file":"js/chunk-7027cdb7.987588aa.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('b-button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.element),expression:\"element\"}],staticClass:\"fullscreen-button\",attrs:{\"variant\":\"light\",\"type\":\"button\",\"title\":_vm.title},on:{\"click\":_vm.toggleFullscreen}},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isFullscreen),expression:\"isFullscreen\"}]},[_c('b-icon-fullscreen-exit')],1),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.isFullscreen),expression:\"!isFullscreen\"}]},[_c('b-icon-fullscreen')],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <b-button v-show=\"element\" variant=\"light\" class=\"fullscreen-button\" type=\"button\" @click=\"toggleFullscreen\" :title=\"title\">\n    <span v-show=\"isFullscreen\"><b-icon-fullscreen-exit /></span>\n    <span v-show=\"!isFullscreen\"><b-icon-fullscreen /></span>\n  </b-button>\n</template>\n\n<script>\n// This is taken from the openEO Web Editor:\n// https://raw.githubusercontent.com/Open-EO/openeo-web-editor/master/src/components/FullscreenButton.vue\n\nimport { BIconFullscreen, BIconFullscreenExit } from 'bootstrap-vue';\n\nexport default {\n  name: 'FullscreenButton',\n  props: {\n    element: {\n      required: true\n    },\n    zIndex: {\n      type: Number,\n      default: 9000\n    }\n  },\n  components: {\n    BIconFullscreen,\n    BIconFullscreenExit\n  },\n  data() {\n    return {\n      isFullscreen: false,\n      keyDownFn: null,\n      oldZIndex: 'auto'\n    };\n  },\n\tcomputed: {\n\t\ttitle() {\n\t\t\treturn this.isFullscreen ? 'Close Fullscreen' : 'View Fullscreen';\n\t\t}\n\t},\n  mounted() {\n    this.keyDownFn = this.onkeyDown.bind(this);\n    let el = this.getElement();\n    if (el) {\n\t\t\tel.style.position = \"relative\";\n      el.addEventListener('keydown', this.keyDownFn);\n    }\n  },\n  beforeDestroy() {\n    let el = this.getElement();\n    if (el) {\n      el.removeEventListener('keydown', this.keyDownFn);\n    }\n  },\n  methods: {\n    onkeyDown(e) {\n      // ToDo: This is bugged and needs some attention\n      if(this.isFullscreen && (e.key === \"F11\" || e.key === \"Escape\")) {\n        this.toggleFullscreen();\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    },\n    getElement() {\n      if (typeof this.element === 'string') {\n        return document.querySelector(this.element);\n      }\n      else if (typeof this.element === 'function') {\n        return this.element();\n      }\n      else {\n        return this.element;\n      }\n    },\n    toggleFullscreen() {\n      let el = this.getElement();\n      if (!this.isFullscreen) {\n\t\t\t\tdocument.body.style.overflow = \"hidden\";\n        this.isFullscreen = true;\n        el.classList.add('fullscreen');\n        this.oldZIndex = el.style.zIndex;\n        el.style.zIndex = this.zIndex;\n      }\n      else {\n        this.isFullscreen = false;\n\t\t\t\tdocument.body.style.overflow = null;\n        el.classList.remove('fullscreen');\n        // Revert z-index changes\n        el.style.zIndex = this.oldZIndex;\n      }\n\n      this.$emit('changed', this.isFullscreen);\n    },\n  }\n};\n</script>\n\n<style lang=\"scss\">\n#stac-browser {\n  .fullscreen {\n    position: absolute !important;\n    top: 0 !important;\n    left: 0 !important;\n    width: 100% !important;\n    height: 100% !important;\n    background-color: white;\n    overflow: auto;\n  }\n}\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FullscreenButton.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FullscreenButton.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FullscreenButton.vue?vue&type=template&id=49e2c960&\"\nimport script from \"./FullscreenButton.vue?vue&type=script&lang=js&\"\nexport * from \"./FullscreenButton.vue?vue&type=script&lang=js&\"\nimport style0 from \"./FullscreenButton.vue?vue&type=style&index=0&id=49e2c960&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FullscreenButton.vue?vue&type=style&index=0&id=49e2c960&prod&lang=scss&\""],"sourceRoot":""}